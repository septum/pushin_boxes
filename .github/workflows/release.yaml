name: RELEASE

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  release-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Remove local cargo config
        run: rm .cargo/config.toml
      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli
      - name: Build
        run: cargo build --release --target wasm32-unknown-unknown --no-default-features
      - name: Prepare package
        run: |
          wasm-bindgen --no-typescript --out-name ${{ github.event.repository.name }} --out-dir wasm --target web target/wasm32-unknown-unknown/release/${{ github.event.repository.name }}.wasm
          cp -r assets wasm/
      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: wasm
          dest: ${{ github.event.repository.name }}.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}-wasm-${{ github.ref_name }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Remove local cargo config
        run: rm .cargo/config.toml
      - name: install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu --no-default-features
      - name: Prepare package
        run: |
          mkdir linux
          cp target/x86_64-unknown-linux-gnu/release/${{ github.event.repository.name }} linux/
          cp -r assets linux/
      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: linux
          dest: ${{ github.event.repository.name }}.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}-linux-${{ github.ref_name }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  release-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      - name: Remove local cargo config
        run: rm .cargo/config.toml
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc --no-default-features
      - name: Prepare package
        run: |
          mkdir windows
          cp target/x86_64-pc-windows-msvc/release/${{ github.event.repository.name }}.exe windows/
          cp -r assets windows/
      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: windows
          dest: ${{ github.event.repository.name }}.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}-windows-${{ github.ref_name }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  release-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"
      - name: Remove local cargo config
        run: rm .cargo/config.toml
      - name: Build
        run: cargo build --release --target x86_64-apple-darwin --no-default-features
      - name: Prepare Package
        run: |
          mkdir -p ${{ github.event.repository.name }}.app/Contents/MacOS
          cp target/x86_64-apple-darwin/release/${{ github.event.repository.name }} ${{ github.event.repository.name }}.app/Contents/MacOS/
          cp -r assets ${{ github.event.repository.name }}.app/Contents/MacOS/
          hdiutil create -fs HFS+ -volname "${{ github.event.repository.name }}" -srcfolder ${{ github.event.repository.name }}.app ${{ github.event.repository.name }}.dmg
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.event.repository.name }}.dmg
          asset_name: ${{ github.event.repository.name }}-macos-${{ github.ref_name }}.dmg
          tag: ${{ github.ref }}
          overwrite: true
